-- Tabela de Usuários (Conta da Família)
CREATE TABLE IF NOT EXISTS usuario (
    id_usuario SERIAL PRIMARY KEY,
    nome_familia VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    atualizado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de Perfis (Membros da Família)
CREATE TABLE IF NOT EXISTS perfil (
    id_perfil SERIAL PRIMARY KEY,
    usuario_id INT NOT NULL,
    nome VARCHAR(255) NOT NULL,
    categoria_familiar VARCHAR(50) NOT NULL,
    cod_perfil VARCHAR(10) UNIQUE NOT NULL,
    renda DECIMAL(10,2) NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id_usuario)
);

-- Tabela de Categorias (Ex: Moradia, Alimentação, etc.)
CREATE TABLE IF NOT EXISTS categoria (
    id_categoria SERIAL PRIMARY KEY,
    nome_categoria VARCHAR(100) NOT NULL UNIQUE
);

-- Tabelas de Lookup para Status, Tipos e Recorrências
CREATE TABLE IF NOT EXISTS status_pagamento_tipo (
    id_status_pagamento_tipo SERIAL PRIMARY KEY,
    nome_status VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS tipo_conta_tipo (
    id_tipo_conta_tipo SERIAL PRIMARY KEY,
    nome_tipo VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS recorrencia_tipo (
    id_recorrencia_tipo SERIAL PRIMARY KEY,
    nome_recorrencia VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS tabela_afetada_tipo (
    id_tabela_afetada_tipo SERIAL PRIMARY KEY,
    nome_tabela VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS tipo_acao_tipo (
    id_tipo_acao_tipo SERIAL PRIMARY KEY,
    nome_acao VARCHAR(50) UNIQUE NOT NULL
);

-- Inserção inicial de dados nas tabelas de lookup (se não existirem)
INSERT INTO status_pagamento_tipo (nome_status) VALUES
('pendente'), ('pago'), ('atrasado')
ON CONFLICT (nome_status) DO NOTHING;

INSERT INTO tipo_conta_tipo (nome_tipo) VALUES
('fixa'), ('variável')
ON CONFLICT (nome_tipo) DO NOTHING;

INSERT INTO recorrencia_tipo (nome_recorrencia) VALUES
('nenhuma'), ('mensal'), ('anual'), ('outro')
ON CONFLICT (nome_recorrencia) DO NOTHING;

INSERT INTO tabela_afetada_tipo (nome_tabela) VALUES
('contas'), ('receita')
ON CONFLICT (nome_tabela) DO NOTHING;

INSERT INTO tipo_acao_tipo (nome_acao) VALUES
('insercao'), ('atualizacao'), ('remocao')
ON CONFLICT (nome_acao) DO NOTHING;

-- Tabela de Contas (Despesas) - Atualizada com FOREIGN KEYs
CREATE TABLE IF NOT EXISTS contas (
    id_conta SERIAL PRIMARY KEY,
    nome_conta VARCHAR(255) NOT NULL,
    valor_conta DECIMAL(10,2) NOT NULL,
    data_entrega DATE NOT NULL,
    data_vencimento DATE NOT NULL,
    status_pagamento_id INT DEFAULT (SELECT id_status_pagamento_tipo FROM status_pagamento_tipo WHERE nome_status = 'pendente'),
    descricao TEXT,
    tipo_conta_id INT DEFAULT (SELECT id_tipo_conta_tipo FROM tipo_conta_tipo WHERE nome_tipo = 'variável'),
    avisado BOOLEAN DEFAULT FALSE,
    recorrencia_id INT DEFAULT (SELECT id_recorrencia_tipo FROM recorrencia_tipo WHERE nome_recorrencia = 'nenhuma'),
    perfil_id INT,
    categoria_id INT,
    FOREIGN KEY (perfil_id) REFERENCES perfil(id_perfil),
    FOREIGN KEY (categoria_id) REFERENCES categoria(id_categoria),
    FOREIGN KEY (status_pagamento_id) REFERENCES status_pagamento_tipo(id_status_pagamento_tipo),
    FOREIGN KEY (tipo_conta_id) REFERENCES tipo_conta_tipo(id_tipo_conta_tipo),
    FOREIGN KEY (recorrencia_id) REFERENCES recorrencia_tipo(id_recorrencia_tipo)
);

-- Tabela de Receitas (Entradas de dinheiro)
CREATE TABLE IF NOT EXISTS receita (
    id_receita SERIAL PRIMARY KEY,
    perfil_id INT NOT NULL,
    nome_receita VARCHAR(255) NOT NULL,
    valor_receita DECIMAL(10,2) NOT NULL,
    data_recebimento DATE NOT NULL,
    descricao TEXT,
    FOREIGN KEY (perfil_id) REFERENCES perfil(id_perfil)
);

-- Tabela de Histórico de Alterações (Auditoria) - Atualizada com FOREIGN KEYs
CREATE TABLE IF NOT EXISTS historico_alteracoes (
    id_log SERIAL PRIMARY KEY,
    perfil_id INT NOT NULL,
    tabela_afetada_id INT NOT NULL,
    registro_id INT NOT NULL,
    tipo_acao_id INT NOT NULL,
    data_acao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    detalhes TEXT,
    FOREIGN KEY (perfil_id) REFERENCES perfil(id_perfil),
    FOREIGN KEY (tabela_afetada_id) REFERENCES tabela_afetada_tipo(id_tabela_afetada_tipo),
    FOREIGN KEY (tipo_acao_id) REFERENCES tipo_acao_tipo(id_tipo_acao_tipo)
);

-- Tabela de Permissões por Perfil
CREATE TABLE IF NOT EXISTS permissoes (
    id_permissao SERIAL PRIMARY KEY,
    perfil_id INT NOT NULL UNIQUE,
    pode_criar_conta BOOLEAN DEFAULT FALSE,
    pode_editar_conta BOOLEAN DEFAULT FALSE,
    pode_excluir_conta BOOLEAN DEFAULT FALSE,
    pode_ver_todas_contas BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (perfil_id) REFERENCES perfil(id_perfil)
);

-- Tabela de Orçamento Mensal
CREATE TABLE IF NOT EXISTS orcamento (
    id_orcamento SERIAL PRIMARY KEY,
    perfil_id INT NOT NULL,
    mes_ano VARCHAR(7) NOT NULL, -- formato: 'AAAA-MM'
    valor_limite DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (perfil_id) REFERENCES perfil(id_perfil),
    UNIQUE (perfil_id, mes_ano)
);